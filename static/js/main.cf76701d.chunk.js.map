{"version":3,"sources":["components/Navbar.js","img/polling-hero.jpeg","views/homePage.js","store/PollSlice.js","components/helperComponents/AddOption.js","store/questionSlice.js","store/optionsSlice.js","store/statusSlice.js","store/optionSlice.js","components/CreatePoll.js","views/createPoll.js","components/helperComponents/DeletePoll.js","components/helperComponents/Vote.js","components/DisplayPoll.js","views/displayPoll.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","root","background","border","borderRadius","boxShadow","color","padding","margin","Navbar","render","classes","history","useHistory","location","pathname","Button","className","onClick","push","replace","AppBar","position","Toolbar","IconButton","edge","Typography","variant","paperContainer","backgroundImage","Image","backgroundSize","height","backdropFilter","display","flexDirection","justifyContent","Home","Paper","align","PollSlice","createSlice","name","initialState","pollsArray","reducers","addPoll","state","action","payload","console","log","deletePoll","index","splice","vote","option","options","noOfVotes","actions","AddOption","props","type","size","updateNoOfOptions","questionSlice","question","setQuestion","optionsSlice","updateOptions","resetOptions","statusSlice","status","updateStatus","optionSlice","setOption","minWidth","cardRoot","CreatePoll","dispatch","useDispatch","useSelector","Card","CardContent","FormControl","component","TextField","id","label","value","required","onChange","e","target","optionsObject","optionDescription","a","setOptions","RadioGroup","FormControlLabel","control","Radio","disabled","length","CreatePollView","Grid","container","item","xs","map","optionIndex","DeletePoll","Vote","DisplayPoll","polls","poll","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","reducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","devTools","process","middleware","thunk","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cf76701d.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport { useHistory } from 'react-router'\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 3,\n  },\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    padding: '2px 2px 2px 2px',\n    margin: ' 0px 10px ',\n  },\n}))\n\nconst Navbar = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  let render\n  if (history.location.pathname === '/') {\n    render = (\n      <div>\n        <Button\n          className={classes.root}\n          onClick={() => history.push('/create-poll')}\n        >\n          Create Poll\n        </Button>\n        <Button\n          className={classes.root}\n          onClick={() => history.push('/view-poll')}\n        >\n          View Poll\n        </Button>\n      </div>\n    )\n  } else if (history.location.pathname === '/create-poll') {\n    render = (\n      <div>\n        <Button className={classes.root} onClick={() => history.replace('/')}>\n          Home\n        </Button>\n        <Button\n          className={classes.root}\n          onClick={() => history.push('/view-poll')}\n        >\n          View Poll\n        </Button>\n      </div>\n    )\n  } else if (history.location.pathname === '/view-poll') {\n    render = (\n      <div>\n        <Button className={classes.root} onClick={() => history.replace('/')}>\n          Home\n        </Button>\n        <Button\n          className={classes.root}\n          onClick={() => history.push('/create-poll')}\n        >\n          Create Poll\n        </Button>\n      </div>\n    )\n  }\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          className={classes.menuButton}\n        ></IconButton>\n        <Typography variant=\"h4\" className={classes.title}>\n          Voting App\n        </Typography>\n        {render}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/polling-hero.77bbdf3a.jpeg\";","import React from 'react'\nimport { Paper, Typography } from '@material-ui/core'\nimport Navbar from '../components/Navbar'\nimport Image from '../img/polling-hero.jpeg'\nimport { makeStyles } from '@material-ui/core'\nimport { Grid } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  paperContainer: {\n    backgroundImage: `url(${Image})`,\n    backgroundSize: 'cover',\n    height: '90vh',\n  },\n  root: {\n    backdropFilter: 'blur(5px)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n}))\n\nconst Home = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <Navbar />\n      <Paper className={classes.paperContainer}>\n        <Typography align=\"center\" variant=\"h2\" className={classes.root}>\n          Voting App\n          <Typography>Dhandhli se Paak, Shifaf Voting ka Intazam</Typography>\n        </Typography>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Home\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  pollsArray: [],\n}\n\nconst PollSlice = createSlice({\n  name: 'polls',\n  initialState,\n  reducers: {\n    addPoll: (state, action) => {\n      state.pollsArray.push(action.payload)\n      console.log('after added', state.pollsArray)\n    },\n    deletePoll: (state, action) => {\n      const index = action.payload\n      state.pollsArray.splice(index, 1)\n      console.log('Array after deleting : ' + state.pollsArray)\n    },\n    vote: (state, action) => {\n      const { index, option } = action.payload\n      state.pollsArray[index].options[option].noOfVotes += 1\n    },\n  },\n})\n\nexport const { addPoll, deletePoll, vote } = PollSlice.actions\nexport default PollSlice\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nconst AddOption = (props) => {\n  return (\n    <Button\n      type=\"button\"\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={() => {\n        props.updateNoOfOptions(props.option)\n      }}\n    >\n      Add Option\n    </Button>\n  )\n}\n\nexport default AddOption\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  question: '',\n}\n\nconst questionSlice = createSlice({\n  name: 'question',\n  initialState,\n  reducers: {\n    setQuestion: (state, action) => {\n      state.question = action.payload\n    },\n  },\n})\nexport const { setQuestion } = questionSlice.actions\nexport default questionSlice\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  options: [],\n}\n\nconst optionsSlice = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    updateOptions: (state, action) => {\n      console.log(' value in action payload :' + action.payload)\n      state.options.push(action.payload)\n    },\n    resetOptions: (state, action) => {\n      state.options = []\n    },\n  },\n})\n\nexport const setOptions = (option) => async (dispatch) => {\n  await dispatch(optionsSlice.actions.updateOptions(option))\n}\n\nexport const { updateOptions, resetOptions } = optionsSlice.actions\nexport default optionsSlice\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  status: 'inactive',\n}\n\nconst statusSlice = createSlice({\n  name: 'status',\n  initialState,\n  reducers: {\n    updateStatus: (state, action) => {\n      state.status = action.payload\n    },\n  },\n})\nexport const { updateStatus } = statusSlice.actions\nexport default statusSlice\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  option: [],\n}\n\nconst optionSlice = createSlice({\n  name: 'option',\n  initialState,\n  reducers: {\n    setOption: (state, action) => {\n      state.option = action.payload\n    },\n  },\n})\nexport const { setOption } = optionSlice.actions\nexport default optionSlice\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addPoll } from '../store/PollSlice'\nimport { makeStyles } from '@material-ui/styles'\nimport { FormControl } from '@material-ui/core'\nimport { RadioGroup } from '@material-ui/core'\nimport { Radio } from '@material-ui/core'\nimport { FormControlLabel } from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { TextField } from '@material-ui/core'\nimport AddOption from './helperComponents/AddOption'\nimport { useHistory } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { setQuestion } from '../store/questionSlice'\nimport { updateOptions, resetOptions } from '../store/optionsSlice'\nimport { updateStatus } from '../store/statusSlice'\nimport { setOption } from '../store/optionSlice'\nimport { setOptions } from '../store/optionsSlice'\n\nconst useStyles = makeStyles({\n  root: {\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px white',\n    padding: '0px 0px 4px 0px',\n    minWidth: 370,\n  },\n  cardRoot: {\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px white',\n    padding: '0px 0px 4px 0px',\n    minWidth: 370,\n    margin: '30px 0px 0px 0px',\n  },\n})\n\nconst CreatePoll = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  let history = useHistory()\n\n  //to handle the form in create poll\n  const question = useSelector((state) => state.question.question)\n  const status = useSelector((state) => state.status.status)\n  const options = useSelector((state) => state.options.options)\n  const option = useSelector((state) => state.option.option)\n\n  //For sending data to store after poll is created\n  function sendData() {\n    dispatch(\n      addPoll({\n        question: question,\n        options: options,\n        status: status,\n      }),\n    )\n    history.replace('/view-poll')\n  }\n  //to reset Data\n  function resetData() {\n    dispatch(setQuestion(''))\n    dispatch(setOption(''))\n    dispatch(resetOptions())\n  }\n\n  //to reset data after every rerendering\n  // useEffect(() => {\n  //   console.log(' Component Rerendered ')\n  //   resetData()\n  // })\n\n  //to render all the options\n  function updateNoOfOptions(value) {\n    let optionsObject = {\n      optionDescription: value,\n      noOfVotes: 0,\n    }\n    console.log(optionsObject)\n    dispatch(setOptions(optionsObject))\n    dispatch(setOption(''))\n  }\n\n  //to check if the poll requirements are fulfilled before submitting form\n  const checkValidation = () => {\n    return !(question && options.length >= 2)\n  }\n\n  return (\n    <div>\n      <Card variant=\"outlined\" className={classes.cardRoot}>\n        <CardContent>\n          <form>\n            <FormControl component=\"fieldset\">\n              <TextField\n                id=\"outlined-basic\"\n                className={classes.root}\n                label=\"Question\"\n                value={question}\n                required\n                variant=\"outlined\"\n                onChange={(e) => dispatch(setQuestion(e.target.value))}\n              />\n              <TextField\n                id=\"outlined-basic\"\n                className={classes.root}\n                required\n                label=\"Option\"\n                value={option}\n                variant=\"outlined\"\n                onChange={(e) => dispatch(setOption(e.target.value))}\n              />\n              <AddOption\n                option={option}\n                updateNoOfOptions={updateNoOfOptions}\n              ></AddOption>\n\n              <RadioGroup\n                aria-label=\"poll-status\"\n                name=\"poll-status\"\n                value={status}\n                required\n                onChange={(e) => dispatch(updateStatus(e.target.value))}\n              >\n                <FormControlLabel\n                  value=\"active\"\n                  control={<Radio />}\n                  label=\"Active\"\n                />\n                <FormControlLabel\n                  value=\"inactive\"\n                  control={<Radio />}\n                  label=\"In-Active\"\n                />\n              </RadioGroup>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={sendData}\n                disabled={checkValidation()}\n              >\n                Publish Poll\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={resetData}\n              >\n                Reset\n              </Button>\n            </FormControl>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport default CreatePoll\n","import React from 'react'\nimport CreatePoll from '../components/CreatePoll'\nimport { Grid } from '@material-ui/core'\nimport Navbar from '../components/Navbar'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '30px 30px 30px 30px',\n  },\n}))\n\nconst CreatePollView = () => {\n  const classes = useStyles()\n\n  const question = useSelector((state) => state.question.question)\n  const status = useSelector((state) => state.status.status)\n  const options = useSelector((state) => state.options.options)\n  console.log('options :' + options)\n  const option = useSelector((state) => state.option.option)\n\n  return (\n    <div>\n      <Navbar />\n      <Grid container spacing={1}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={4}>\n          <CreatePoll />\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid container item xs={6}>\n          <Card className={classes.root}>\n            <CardContent>\n              <Grid item xs={12}>\n                <h2>Statement : {question}</h2>\n                <h3>Options :</h3>\n                {options.map((option, optionIndex) => (\n                  <div>\n                    <Grid container item xs={12}>\n                      <Grid item xs={10}>\n                        <h5>\n                          {optionIndex + 1} :{option.optionDescription}\n                        </h5>\n                      </Grid>\n                    </Grid>\n                  </div>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default CreatePollView\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { deletePoll } from '../../store/PollSlice'\nimport { useDispatch } from 'react-redux'\nconst DeletePoll = (props) => {\n  const dispatch = useDispatch()\n  return (\n    <Button\n      type=\"button\"\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={() => {\n        dispatch(deletePoll(props.index))\n      }}\n    >\n      Delete Poll\n    </Button>\n  )\n}\n\nexport default DeletePoll\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { vote } from '../../store/PollSlice'\nimport { useDispatch } from 'react-redux'\n\nconst Vote = (props) => {\n  const dispatch = useDispatch()\n  return (\n    <Button\n      type=\"button\"\n      variant=\"contained\"\n      color=\"secondary\"\n      size=\"small\"\n      onClick={() => {\n        dispatch(vote({ index: props.index, option: props.optionIndex }))\n      }}\n    >\n      Vote\n    </Button>\n  )\n}\n\nexport default Vote\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Button } from '@material-ui/core'\nimport { Grid } from '@material-ui/core'\nimport DeletePoll from './helperComponents/DeletePoll'\nimport Vote from './helperComponents/Vote'\nimport { Card } from '@material-ui/core'\nimport { CardContent } from '@material-ui/core'\n\nconst DisplayPoll = () => {\n  const polls = useSelector((state) => state.poll.pollsArray)\n\n  return (\n    <Grid container>\n      {polls.map((poll, index) => (\n        <Grid>\n          <Card>\n            <CardContent>\n              <Grid item xs={12}>\n                <h2> {poll.question}</h2>\n                {poll.options.map((option, optionIndex) => (\n                  <Grid container item xs={12}>\n                    <Grid item xs={8}>\n                      <h3> {option.optionDescription}</h3>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Vote index={index} optionIndex={optionIndex}></Vote>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Button color=\"secondary\" size=\"small\">\n                        {option.noOfVotes}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n          <Grid item xs={4}>\n            <h2>\n              <DeletePoll index={index}></DeletePoll>\n            </h2>\n          </Grid>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nexport default DisplayPoll\n","import React from 'react'\nimport Display from '../components/DisplayPoll'\nimport { Grid } from '@material-ui/core'\nimport Navbar from '../components/Navbar'\nimport { makeStyles } from '@material-ui/core'\nimport Image from '../img/polling-hero.jpeg'\n\nconst useStyles = makeStyles((theme) => ({\n  paperContainer: {\n    backgroundImage: `url(${Image})`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    color: '#f5f5f5',\n  },\n}))\n\nconst DisplayPoll = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.paperContainer}>\n      <Navbar />\n      <Grid container spacing={2}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <Display />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default DisplayPoll\n","import './App.css'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './views/homePage'\nimport CreatePoll from './views/createPoll'\nimport DisplayPoll from './views/displayPoll'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/create-poll\">\n          <CreatePoll />\n        </Route>\n        <Route path=\"/view-poll\">\n          <DisplayPoll />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\nimport thunk from 'redux-thunk'\n\nimport PollSlice from './PollSlice'\nimport questionSlice from './questionSlice'\nimport statusSlice from './statusSlice'\nimport optionsSlice from './optionsSlice'\nimport optionSlice from './optionSlice'\n\nconst rootReducer = combineReducers({\n  poll: PollSlice.reducer,\n  question: questionSlice.reducer,\n  status: statusSlice.reducer,\n  options: optionsSlice.reducer,\n  option: optionSlice.reducer,\n})\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: [thunk],\n})\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistStore } from 'redux-persist'\n\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}